;; Object popup-20150626.711/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "popup-20150626.711/"
  :tables
  (list
    (semanticdb-table "popup.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1129 1146])
            ("popup-version" variable
               (:constant-flag t
                :default-value "0.5.3")
                nil [1148 1180])
            ("popup-calculate-max-width" function (:arguments ("max-width")) nil [1200 1476])
            ("popup-use-optimized-column-computation" variable (:default-value t) nil [1478 1619])
            ("popup-aif" function (:arguments ("test" "then" "else")) nil [1621 1753])
            ("popup-awhen" function (:arguments ("test" "body")) nil [1755 1882])
            ("popup-x-to-string" function (:arguments ("x")) nil [1884 2166])
            ("popup-substring-by-width" function (:arguments ("string" "width")) nil [2168 2715])
            ("popup-fill-string" function (:arguments ("string" "width" "max-width" "justify" "squeeze")) nil [2717 4802])
            ("popup-save-buffer-state" function (:arguments ("body")) nil [4804 5095])
            ("popup-vertical-motion" function (:arguments ("column" "direction")) nil [5097 5354])
            ("popup-last-line-of-buffer-p" function nil nil [5356 5517])
            ("popup-lookup-key-by-event" function (:arguments ("function" "event")) nil [5519 5903])
            ("popup" customgroup (:user-visible-flag t) nil [5918 6004])
            ("popup-face" variable
               (:default-value (quote ((t (:background "lightgray" :foreground "black"))))
                :type "face")
                nil [6006 6117])
            ("popup-summary-face" variable
               (:default-value (quote ((t (:inherit popup-face :foreground "dimgray"))))
                :type "face")
                nil [6119 6244])
            ("popup-scroll-bar-foreground-face" variable
               (:default-value (quote ((t (:background "black"))))
                :type "face")
                nil [6246 6371])
            ("popup-scroll-bar-background-face" variable
               (:default-value (quote ((t (:background "gray"))))
                :type "face")
                nil [6373 6497])
            ("popup-instances" variable nil nil [6499 6548])
            ("popup-scroll-bar-foreground-char" variable (:default-value (propertize " " (quote face) (quote popup-scroll-bar-foreground-face))) nil [6550 6691])
            ("popup-scroll-bar-background-char" variable (:default-value (propertize " " (quote face) (quote popup-scroll-bar-background-face))) nil [6693 6834])
            ("cl-defstruct" code nil nil [6836 7145])
            ("popup-item-propertize" function (:arguments ("item" "properties")) nil [7147 7509])
            ("popup-item-property" function (:arguments ("item" "property")) nil [7511 7702])
            ("cl-defun" code nil nil [7704 8518])
            ("popup-item-value" function (:arguments ("item")) nil [8520 8602])
            ("popup-item-value-or-self" function (:arguments ("item")) nil [8603 8685])
            ("popup-item-face" function (:arguments ("item")) nil [8686 8773])
            ("popup-item-mouse-face" function (:arguments ("item")) nil [8774 8867])
            ("popup-item-selection-face" function (:arguments ("item")) nil [8868 8959])
            ("popup-item-document" function (:arguments ("item")) nil [8960 9045])
            ("popup-item-summary" function (:arguments ("item")) nil [9046 9130])
            ("popup-item-symbol" function (:arguments ("item")) nil [9131 9214])
            ("popup-item-sublist" function (:arguments ("item")) nil [9215 9299])
            ("popup-item-documentation" function (:arguments ("item")) nil [9301 9481])
            ("popup-item-show-help-1" function (:arguments ("item")) nil [9483 9773])
            ("popup-item-show-help-with-event-loop" function (:arguments ("item")) nil [9775 10368])
            ("popup-item-show-help" function (:arguments ("item" "persist")) nil [10370 10798])
            ("popup-set-list" function (:arguments ("popup" "list")) nil [10800 10951])
            ("popup-set-filtered-list" function (:arguments ("popup" "list")) nil [10953 11206])
            ("popup-selected-item" function (:arguments ("popup")) nil [11208 11291])
            ("popup-selected-line" function (:arguments ("popup")) nil [11293 11380])
            ("popup-line-overlay" function (:arguments ("popup" "line")) nil [11382 11458])
            ("popup-selected-line-overlay" function (:arguments ("popup")) nil [11460 11560])
            ("popup-hide-line" function (:arguments ("popup" "line")) nil [11562 11733])
            ("popup-line-hidden-p" function (:arguments ("popup" "line")) nil [11735 11931])
            ("cl-defun" code nil nil [11933 14031])
            ("cl-defun" code nil nil [14033 15444])
            ("popup-live-p" function (:arguments ("popup")) nil [15446 15551])
            ("popup-child-point" function (:arguments ("popup" "offset")) nil [15553 15705])
            ("popup-calculate-direction" function (:arguments ("height" "row")) nil [15707 16347])
            ("cl-defun" code nil nil [16349 24262])
            ("popup-delete" function (:arguments ("popup")) nil [24264 24840])
            ("popup-draw" function (:arguments ("popup")) nil [24842 29956])
            ("popup-hide" function (:arguments ("popup")) nil [29958 30182])
            ("popup-hidden-p" function (:arguments ("popup")) nil [30184 30433])
            ("popup-jump" function (:arguments ("popup" "cursor")) nil [30435 30838])
            ("popup-select" function (:arguments ("popup" "i")) nil [30840 31066])
            ("popup-next" function (:arguments ("popup")) nil [31068 31669])
            ("popup-previous" function (:arguments ("popup")) nil [31671 32258])
            ("popup-page-next" function (:arguments ("popup")) nil [32260 32444])
            ("popup-page-previous" function (:arguments ("popup")) nil [32446 32640])
            ("popup-scroll-down" function (:arguments ("popup" "n")) nil [32642 32981])
            ("popup-scroll-up" function (:arguments ("popup" "n")) nil [32983 33267])
            ("popup-isearch-match" variable
               (:default-value (quote ((t (:background "sky blue"))))
                :type "face")
                nil [33302 33411])
            ("popup-isearch-cursor-color" variable (:default-value "blue") nil [33413 33455])
            ("popup-isearch-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "" (quote popup-isearch-cancel)) (define-key map "" (quote popup-isearch-close)) (define-key map [left] (quote popup-isearch-close)) (define-key map "" (quote popup-isearch-delete)) (define-key map (kbd "DEL") (quote popup-isearch-delete)) map)) nil [33457 33858])
            ("popup-menu-show-quick-help-function" variable (:default-value (quote popup-menu-show-quick-help)) nil [33860 33991])
            ("popup-isearch-char-p" function (:arguments ("char")) nil [33993 34096])
            ("popup-isearch-filter-list" function (:arguments ("pattern" "list")) nil [34098 34967])
            ("popup-isearch-prompt" function (:arguments ("popup" "pattern")) nil [34969 35180])
            ("popup-isearch-update" function (:arguments ("popup" "filter" "pattern" "callback")) nil [35182 35539])
            ("cl-defun" code nil nil [35541 38406])
            ("popup-tip-face" variable
               (:default-value (quote ((t (:background "khaki1" :foreground "black"))))
                :type "face")
                nil [38426 38542])
            ("popup-tip-max-width" variable (:default-value 80) nil [38544 38575])
            ("cl-defun" code nil nil [38577 41189])
            ("popup-menu-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [41210 41307])
            ("popup-menu-mouse-face" variable
               (:default-value (quote ((t (:background "blue" :foreground "white"))))
                :type "face")
                nil [41309 41431])
            ("popup-menu-selection-face" variable
               (:default-value (quote ((t (:background "steelblue" :foreground "white"))))
                :type "face")
                nil [41433 41574])
            ("popup-menu-summary-face" variable
               (:default-value (quote ((t (:inherit popup-summary-face))))
                :type "face")
                nil [41576 41692])
            ("popup-menu-show-tip-function" variable (:default-value (quote popup-tip)) nil [41694 41813])
            ("popup-menu-show-help" function (:arguments ("menu" "persist" "item")) nil [41815 41943])
            ("popup-menu-documentation" function (:arguments ("menu" "item")) nil [41945 42065])
            ("popup-menu-show-quick-help" function (:arguments ("menu" "item" "args")) nil [42067 42965])
            ("popup-menu-item-of-mouse-event" function (:arguments ("event")) nil [42967 43295])
            ("popup-menu-read-key-sequence" function (:arguments ("keymap" "prompt" "timeout")) nil [43297 44621])
            ("popup-menu-fallback" function (:arguments ("event" "default")) nil [44623 44666])
            ("cl-defun" code nil nil [44668 48474])
            ("popup-preferred-width" function (:arguments ("list")) nil [48476 48986])
            ("popup-menu-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "" (quote popup-select)) (define-key map "" (quote popup-open)) (define-key map [right] (quote popup-open)) (define-key map "" (quote popup-close)) (define-key map [left] (quote popup-close)) (define-key map "" (quote popup-next)) (define-key map [down] (quote popup-next)) (define-key map "" (quote popup-previous)) (define-key map [up] (quote popup-previous)) (define-key map [next] (quote popup-page-next)) (define-key map [prior] (quote popup-page-previous)) (define-key map [f1] (quote popup-help)) (define-key map (kbd "") (quote popup-help)) (define-key map "" (quote popup-isearch)) (define-key map [mouse-1] (quote popup-select)) (define-key map [mouse-4] (quote popup-previous)) (define-key map [mouse-5] (quote popup-next)) map)) nil [48988 49865])
            ("cl-defun" code nil nil [49867 54255])
            ("popup-cascade-menu" function (:arguments ("list" "args")) nil [54257 54840])
            ("popup" package nil nil [54842 54858]))          
      :file "popup.el"
      :pointmax 54882
      :fsize 54881
      :lastmodtime '(21918 12011 0 0)
      :unmatched-syntax nil))
  :file "!home!marselo!.emacs.d!elpa!popup-20150626.711!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
