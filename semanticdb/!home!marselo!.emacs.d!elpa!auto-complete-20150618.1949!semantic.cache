;; Object auto-complete-20150618.1949/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete-20150618.1949/"
  :tables
  (list
    (semanticdb-table "auto-complete.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("ac-version" variable
               (:constant-flag t
                :default-value "1.5.0")
                nil [1379 1503])
            ("ac-version-major" variable
               (:constant-flag t
                :default-value (car (version-to-list ac-version)))
                nil [1505 1609])
            ("ac-version-minor" variable
               (:constant-flag t
                :default-value (cadr (version-to-list ac-version)))
                nil [1611 1716])
            ("cl-lib" include nil nil [1718 1735])
            ("popup" include nil nil [1736 1752])
            ("ac-error" function (:arguments ("var")) nil [1773 1957])
            ("auto-complete" customgroup (:user-visible-flag t) nil [1982 2068])
            ("ac-delay" variable (:default-value 0.1) nil [2070 2177])
            ("ac-auto-show-menu" variable (:default-value 0.8) nil [2179 2418])
            ("ac-show-menu-immediately-on-auto-complete" variable (:default-value t) nil [2420 2586])
            ("ac-expand-on-auto-complete" variable (:default-value t) nil [2588 2743])
            ("ac-disable-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-face))) nil [2745 2956])
            ("ac-stop-flymake-on-completing" variable (:default-value t) nil [2958 3102])
            ("ac-flycheck-poll-completion-end-interval" variable (:default-value 0.5) nil [3104 3290])
            ("ac-use-fuzzy" variable (:default-value (and (locate-library "fuzzy") t)) nil [3292 3428])
            ("ac-fuzzy-cursor-color" variable (:default-value "red") nil [3430 3541])
            ("ac-use-comphist" variable (:default-value t) nil [3543 3667])
            ("ac-comphist-threshold" variable (:default-value 0.7) nil [3669 3795])
            ("ac-comphist-file" variable (:default-value (expand-file-name (concat (if (boundp (quote user-emacs-directory)) user-emacs-directory "~/.emacs.d/") "/ac-comphist.dat"))) nil [3797 4109])
            ("ac-user-dictionary" variable nil nil [4111 4222])
            ("ac-dictionary-files" variable (:default-value (quote ("~/.dict"))) nil [4224 4339])
            ("defvaralias" code nil nil [4340 4400])
            ("ac-dictionary-directories" variable (:default-value (ignore-errors (when load-file-name (let ((installed-dir (file-name-directory load-file-name))) (cl-loop for name in (quote ("ac-dict" "dict")) for dir = (concat installed-dir name) if (file-directory-p dir) collect dir))))) nil [4402 4795])
            ("ac-use-quick-help" variable (:default-value t) nil [4797 4903])
            ("ac-quick-help-delay" variable (:default-value 1.5) nil [4905 5009])
            ("ac-menu-height" variable (:default-value 10) nil [5011 5115])
            ("defvaralias" code nil nil [5116 5171])
            ("ac-quick-help-height" variable (:default-value 20) nil [5173 5279])
            ("ac-quick-help-prefer-pos-tip" variable (:default-value t) nil [5281 5449])
            ("defvaralias" code nil nil [5450 5517])
            ("ac-candidate-limit" variable nil nil [5519 5654])
            ("defvaralias" code nil nil [5655 5706])
            ("ac-modes" variable (:default-value (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode c-mode cc-mode c++-mode go-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode tcl-mode ecmascript-mode javascript-mode js-mode js2-mode php-mode css-mode scss-mode less-css-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode web-mode ts-mode sclang-mode verilog-mode qml-mode))) nil [5708 6399])
            ("ac-compatible-packages-regexp" variable (:default-value "^ac-") nil [6401 6557])
            ("ac-non-trigger-commands" variable (:default-value (quote (*table--cell-self-insert-command electric-buffer-list))) nil [6559 6770])
            ("ac-trigger-commands" variable (:default-value (quote (self-insert-command))) nil [6772 6956])
            ("ac-trigger-commands-on-completing" variable (:default-value (quote (delete-backward-char backward-delete-char backward-delete-char-untabify autopair-backspace paredit-backward-delete paredit-backward-delete-word))) nil [6958 7334])
            ("ac-trigger-key" variable nil nil [7336 7869])
            ("ac-auto-start" variable (:default-value 2) nil [7871 8284])
            ("ac-stop-words" variable nil nil [8286 8403])
            ("defvaralias" code nil nil [8404 8444])
            ("ac-use-dictionary-as-stop-words" variable (:default-value t) nil [8446 8612])
            ("ac-ignore-case" variable (:default-value (quote smart)) nil [8614 8951])
            ("ac-dwim" variable (:default-value t) nil [8953 9080])
            ("ac-use-menu-map" variable nil nil [9082 9236])
            ("ac-use-overriding-local-map" variable nil nil [9238 9430])
            ("ac-disable-inline" variable nil nil [9432 9555])
            ("ac-candidate-menu-min" variable (:default-value 1) nil [9557 9683])
            ("ac-max-width" variable nil nil [9685 9938])
            ("ac-completion-face" variable
               (:default-value (quote ((t (:foreground "darkgray" :underline t))))
                :type "face")
                nil [9940 10070])
            ("ac-candidate-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [10072 10178])
            ("ac-candidate-mouse-face" variable
               (:default-value (quote ((t (:inherit popup-menu-mouse-face))))
                :type "face")
                nil [10180 10309])
            ("ac-selection-face" variable
               (:default-value (quote ((t (:inherit popup-menu-selection-face))))
                :type "face")
                nil [10311 10441])
            ("auto-complete-mode-hook" variable nil nil [10443 10514])
            ("auto-complete-mode" variable nil nil [10544 10625])
            ("ac-cursor-color" variable nil nil [10627 10677])
            ("ac-inline" variable nil nil [10679 10733])
            ("ac-menu" variable nil nil [10735 10774])
            ("ac-show-menu" variable nil nil [10776 10838])
            ("ac-last-completion" variable nil nil [10840 10935])
            ("ac-quick-help" variable nil nil [10937 10987])
            ("ac-completing" variable nil nil [10989 11084])
            ("ac-buffer" variable nil nil [11086 11151])
            ("ac-point" variable nil nil [11153 11201])
            ("ac-last-point" variable nil nil [11203 11265])
            ("ac-prefix" variable nil nil [11267 11308])
            ("defvaralias" code nil nil [11309 11344])
            ("ac-selected-candidate" variable nil nil [11346 11409])
            ("ac-common-part" variable nil nil [11411 11533])
            ("ac-whole-common-part" variable nil nil [11535 11658])
            ("ac-prefix-overlay" variable nil nil [11660 11721])
            ("ac-timer" variable nil nil [11723 11771])
            ("ac-show-menu-timer" variable nil nil [11773 11830])
            ("ac-quick-help-timer" variable nil nil [11832 11891])
            ("ac-triggered" variable nil nil [11893 11938])
            ("ac-limit" variable nil nil [11940 12010])
            ("ac-candidates" variable nil nil [12012 12062])
            ("ac-candidates-cache" variable nil nil [12064 12141])
            ("ac-fuzzy-enable" variable nil nil [12143 12216])
            ("ac-dwim-enable" variable nil nil [12218 12296])
            ("ac-mode-map" variable (:default-value (make-sparse-keymap)) nil [12298 12435])
            ("ac-completing-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ac-expand)) (define-key map [tab] (quote ac-expand)) (define-key map "" (quote ac-complete)) (define-key map (kbd "M-TAB") (quote auto-complete)) (define-key map "\356" (quote ac-next)) (define-key map "\360" (quote ac-previous)) (define-key map [down] (quote ac-next)) (define-key map [up] (quote ac-previous)) (define-key map [f1] (quote ac-help)) (define-key map [M-f1] (quote ac-persist-help)) (define-key map (kbd "C-?") (quote ac-help)) (define-key map (kbd "C-M-?") (quote ac-persist-help)) (define-key map [C-down] (quote ac-quick-help-scroll-down)) (define-key map [C-up] (quote ac-quick-help-scroll-up)) (define-key map "\216" (quote ac-quick-help-scroll-down)) (define-key map "\220" (quote ac-quick-help-scroll-up)) (dotimes (i 9) (let ((symbol (intern (format "ac-complete-select-%d" (1+ i))))) (fset symbol (\` (lambda nil (interactive) (when (and (ac-menu-live-p) (popup-select ac-menu (\, i))) (ac-complete))))) (define-key map (read-kbd-macro (format "M-%s" (1+ i))) symbol))) map)) nil [12437 13606])
            ("defvaralias" code nil nil [13607 13661])
            ("ac-menu-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) (define-key map (kbd "RET") (quote ac-complete)) (define-key map "" (quote ac-next)) (define-key map "" (quote ac-previous)) (define-key map "" (quote ac-isearch)) (define-key map [mouse-1] (quote ac-mouse-1)) (define-key map [down-mouse-1] (quote ac-ignore)) (define-key map [mouse-4] (quote ac-mouse-4)) (define-key map [mouse-5] (quote ac-mouse-5)) map)) nil [13663 14160])
            ("ac-current-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) map)) nil [14162 14276])
            ("ac-match-function" variable (:default-value (quote all-completions)) nil [14278 14349])
            ("ac-prefix-definitions" variable (:default-value (quote ((symbol . ac-prefix-symbol) (file . ac-prefix-file) (valid-file . ac-prefix-valid-file) (c-dot . ac-prefix-c-dot) (c-dot-ref . ac-prefix-c-dot-ref) (cc-member . ac-prefix-cc-member)))) nil [14351 14627])
            ("ac-sources" variable (:default-value (quote (ac-source-words-in-same-mode-buffers))) nil [14629 14716])
            ("make-variable-buffer-local" code nil nil [14717 14757])
            ("ac-compiled-sources" variable nil nil [14759 14828])
            ("ac-current-sources" variable nil nil [14830 14932])
            ("ac-omni-completion-sources" variable nil nil [14934 15002])
            ("ac-current-prefix-def" variable nil nil [15004 15038])
            ("ac-ignoring-prefix-def" variable nil nil [15040 15075])
            ("ac-comphist" variable nil nil [15117 15177])
            ("ac-comphist-make-tab" function nil nil [15179 15246])
            ("ac-comphist-tab" function (:arguments ("db")) nil [15248 15292])
            ("ac-comphist-cache" function (:arguments ("db")) nil [15294 15340])
            ("ac-comphist-make" function (:arguments ("tab")) nil [15342 15466])
            ("ac-comphist-get" function (:arguments ("db" "string" "create")) nil [15468 15727])
            ("ac-comphist-add" function (:arguments ("db" "string" "prefix")) nil [15729 16025])
            ("ac-comphist-score" function (:arguments ("db" "string" "prefix")) nil [16027 17185])
            ("ac-comphist-sort" function (:arguments ("db" "collection" "prefix" "threshold")) nil [17187 18108])
            ("ac-comphist-serialize" function (:arguments ("db")) nil [18110 18279])
            ("ac-comphist-deserialize" function (:arguments ("sexp")) nil [18281 18647])
            ("ac-comphist-init" function nil nil [18649 18745])
            ("ac-comphist-load" function nil nil [18747 19136])
            ("ac-comphist-save" function nil nil [19138 19364])
            ("ac-buffer-dictionary" variable nil nil [19385 19418])
            ("ac-file-dictionary" variable (:default-value (make-hash-table :test (quote equal))) nil [19419 19477])
            ("ac-clear-dictionary-cache" function nil nil [19479 19735])
            ("ac-file-dictionary" function (:arguments ("filename")) nil [19737 20144])
            ("ac-mode-dictionary" function (:arguments ("mode")) nil [20146 20534])
            ("ac-buffer-dictionary" function (:arguments ("buffer")) nil [20536 20984])
            ("ac-menu-at-wrapper-line-p" function nil nil [21021 21300])
            ("ac-stop-word-p" function (:arguments ("word")) nil [21302 21456])
            ("ac-prefix-default" function nil nil [21458 21784])
            ("ac-prefix-symbol" function nil nil [21786 21924])
            ("ac-prefix-file" function nil nil [21926 22056])
            ("ac-windows-remote-file-p" function (:arguments ("file")) nil [22058 22211])
            ("ac-prefix-valid-file" function nil nil [22213 22872])
            ("ac-prefix-c-dot" function nil nil [22874 23044])
            ("ac-prefix-c-dot-ref" function nil nil [23046 23251])
            ("ac-prefix-cc-member" function nil nil [23253 23456])
            ("ac-define-prefix" function (:arguments ("name" "prefix")) nil [23458 23644])
            ("ac-match-substring" function (:arguments ("prefix" "candidates")) nil [23646 23854])
            ("ac-source-entity" function (:arguments ("source")) nil [23856 23955])
            ("ac-source-available-p" function (:arguments ("source")) nil [23957 24867])
            ("ac-compile-sources" function (:arguments ("sources")) nil [24869 25661])
            ("ac-compiled-sources" function nil nil [25663 25797])
            ("ac-menu-live-p" function nil nil [25799 25852])
            ("ac-menu-create" function (:arguments ("point" "width" "height")) nil [25854 26367])
            ("ac-menu-delete" function nil nil [26369 26457])
            ("ac-inline-overlay" function nil nil [26459 26510])
            ("ac-inline-live-p" function nil nil [26512 26582])
            ("ac-inline-show" function (:arguments ("point" "string")) nil [26584 28517])
            ("ac-inline-delete" function nil nil [28519 28661])
            ("ac-inline-hide" function nil nil [28663 28999])
            ("ac-inline-update" function nil nil [29001 29429])
            ("ac-put-prefix-overlay" function nil nil [29431 29937])
            ("ac-remove-prefix-overlay" function nil nil [29939 30254])
            ("ac-activate-completing-map" function nil nil [30256 30643])
            ("ac-deactivate-completing-map" function nil nil [30645 30985])
            ("ac-selected-candidate" function nil nil [30987 31073])
            ("ac-prefix" function (:arguments ("requires" "ignore-list")) nil [31075 32891])
            ("ac-init" function nil nil [32893 33290])
            ("ac-candidates-1" function (:arguments ("source")) nil [33292 35526])
            ("ac-delete-duplicated-candidates" function (:arguments ("candidates")) nil [35528 35909])
            ("ac-reduce-candidates" function (:arguments ("candidates")) nil [35911 36426])
            ("ac-candidates" function nil nil [36428 38349])
            ("ac-update-candidates" function (:arguments ("cursor" "scroll-top")) nil [38351 39035])
            ("ac-reposition" function nil nil [39037 39397])
            ("ac-cleanup" function nil nil [39399 40852])
            ("ac-abort" function nil nil [40854 40913])
            ("ac-extend-region-to-delete" function (:arguments ("string")) nil [40915 41652])
            ("ac-expand-string" function (:arguments ("string" "remove-undo-boundary")) nil [41654 43207])
            ("ac-set-trigger-key" function (:arguments ("key")) nil [43209 43593])
            ("ac-set-timer" function nil nil [43595 43716])
            ("ac-cancel-timer" function nil nil [43718 43823])
            ("ac-update" function (:arguments ("force")) nil [43825 44657])
            ("ac-update-greedy" function (:arguments ("force")) nil [44659 44975])
            ("ac-set-show-menu-timer" function nil nil [44977 45227])
            ("ac-cancel-show-menu-timer" function nil nil [45229 45374])
            ("ac-show-menu" function nil nil [45376 45526])
            ("ac-help" function (:arguments ("persist")) nil [45528 45643])
            ("ac-persist-help" function nil nil [45645 45701])
            ("ac-last-help" function (:arguments ("persist")) nil [45703 45851])
            ("ac-last-persist-help" function nil nil [45853 45919])
            ("ac-set-quick-help-timer" function nil nil [45921 46136])
            ("ac-cancel-quick-help-timer" function nil nil [46138 46287])
            ("ac-pos-tip-show-quick-help" function (:arguments ("menu" "item" "args")) nil [46289 47261])
            ("ac-quick-help-use-pos-tip-p" function nil nil [47263 47386])
            ("ac-quick-help" function (:arguments ("force")) nil [47388 48112])
            ("ac-remove-quick-help" function nil nil [48114 48313])
            ("ac-last-quick-help" function nil nil [48315 48913])
            ("ac-define-quick-help-command" function (:arguments ("name" "arglist" "body")) nil [48915 49092])
            ("ac-define-quick-help-command" code nil nil [49094 49230])
            ("ac-define-quick-help-command" code nil nil [49232 49364])
            ("ac-isearch-callback" function (:arguments ("list")) nil [49399 49478])
            ("ac-isearch" function nil nil [49480 50025])
            ("cl-defun" code nil nil [50061 51048])
            ("auto-complete" function
               (:user-visible-flag t
                :arguments ("sources"))
                nil [51065 51203])
            ("ac-fuzzy-complete" function (:user-visible-flag t) nil [51205 51814])
            ("ac-next" function (:user-visible-flag t) nil [51816 52053])
            ("ac-previous" function (:user-visible-flag t) nil [52055 52308])
            ("ac-expand" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [52310 53106])
            ("ac-expand-previous" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [53108 53237])
            ("ac-expand-common" function (:user-visible-flag t) nil [53239 53580])
            ("ac-complete-1" function (:arguments ("candidate")) nil [53582 54192])
            ("ac-complete" function (:user-visible-flag t) nil [54194 54292])
            ("cl-defun" code nil nil [54294 55792])
            ("ac-stop" function (:user-visible-flag t) nil [55794 55898])
            ("ac-ignore" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [55900 55970])
            ("ac-mouse-1" function (:arguments ("event")) nil [55972 56096])
            ("ac-mouse-4" function (:arguments ("event")) nil [56098 56160])
            ("ac-mouse-5" function (:arguments ("event")) nil [56162 56220])
            ("ac-trigger-key-command" function (:arguments ("force")) nil [56222 56502])
            ("ac-clear-variables-every-minute-timer" variable nil nil [56534 56584])
            ("ac-clear-variables-after-save" variable nil nil [56585 56627])
            ("ac-clear-variables-every-minute" variable nil nil [56628 56672])
            ("ac-minutes-counter" variable nil nil [56673 56702])
            ("ac-clear-variable-after-save" function (:arguments ("variable" "pred")) nil [56704 56834])
            ("ac-clear-variables-after-save" function nil nil [56836 57018])
            ("ac-clear-variable-every-minutes" function (:arguments ("variable" "minutes")) nil [57020 57151])
            ("ac-clear-variable-every-minute" function (:arguments ("variable")) nil [57153 57249])
            ("ac-clear-variable-every-10-minutes" function (:arguments ("variable")) nil [57251 57352])
            ("ac-clear-variables-every-minute" function nil nil [57354 57556])
            ("ac-cursor-on-diable-face-p" function (:arguments ("point")) nil [57586 57709])
            ("ac-trigger-command-p" function (:arguments ("command")) nil [57711 58057])
            ("ac-fallback-key-sequence" function nil nil [58059 58243])
            ("ac-fallback-command" function (:arguments ("except-command")) nil [58245 58581])
            ("ac-compatible-package-command-p" function (:arguments ("command")) nil [58583 58798])
            ("ac-handle-pre-command" function nil nil [58800 59792])
            ("ac-handle-post-command" function nil nil [59794 60183])
            ("ac-flycheck-poll-completion-end-timer" variable nil nil [60185 60272])
            ("ac-syntax-checker-workaround" function nil nil [60274 61279])
            ("ac-setup" function nil nil [61281 61599])
            ("define-minor-mode" code nil nil [61616 62257])
            ("auto-complete-mode-maybe" function nil nil [62259 62457])
            ("define-global-minor-mode" code nil nil [62474 62596])
            ("ac-flyspell-workaround" function (:user-visible-flag t) nil [62645 63037])
            ("ac-linum-workaround" function (:user-visible-flag t) nil [63039 63324])
            ("ac-define-source" function (:arguments ("name" "source")) nil [63352 63939])
            ("ac-word-index" variable nil nil [63967 63993])
            ("ac-candidate-words-in-buffer" function (:arguments ("point" "prefix" "limit")) nil [63995 64901])
            ("ac-incremental-update-word-index" function nil nil [64903 65454])
            ("ac-update-word-index-1" function nil nil [65456 65877])
            ("ac-update-word-index" function nil nil [65879 66093])
            ("ac-word-candidates" function (:arguments ("buffer-pred")) nil [66095 66733])
            ("ac-define-source" code nil nil [66735 66808])
            ("ac-define-source" code nil nil [66810 66921])
            ("ac-define-source" code nil nil [66923 67158])
            ("ac-symbols-cache" variable nil nil [67183 67212])
            ("ac-clear-variable-every-10-minutes" code nil nil [67213 67267])
            ("ac-symbol-file" function (:arguments ("symbol" "type")) nil [67269 68753])
            ("ac-symbol-documentation" function (:arguments ("symbol")) nil [68755 70529])
            ("ac-symbol-candidates" function nil nil [70531 70832])
            ("ac-define-source" code nil nil [70834 70973])
            ("ac-functions-cache" variable nil nil [71000 71031])
            ("ac-clear-variable-every-10-minutes" code nil nil [71032 71088])
            ("ac-function-candidates" function nil nil [71090 71308])
            ("ac-define-source" code nil nil [71310 71498])
            ("ac-variables-cache" variable nil nil [71525 71556])
            ("ac-clear-variable-every-10-minutes" code nil nil [71557 71613])
            ("ac-variable-candidates" function nil nil [71615 71832])
            ("ac-define-source" code nil nil [71834 71977])
            ("ac-emacs-lisp-features" variable nil nil [72003 72038])
            ("ac-clear-variable-every-10-minutes" code nil nil [72039 72099])
            ("ac-emacs-lisp-feature-candidates" function nil nil [72101 72786])
            ("ac-define-source" code nil nil [72788 72965])
            ("defvaralias" code nil nil [72967 73031])
            ("ac-define-source" code nil nil [73050 73245])
            ("ac-define-source" code nil nil [73284 73391])
            ("ac-filename-cache" variable nil nil [73412 73442])
            ("ac-filename-candidate" function nil nil [73444 74235])
            ("ac-define-source" code nil nil [74237 74435])
            ("ac-define-source" code nil nil [74458 74547])
            ("auto-complete" package nil nil [74549 74573]))          
      :file "auto-complete.el"
      :pointmax 74605
      :fsize 74604
      :lastmodtime '(21918 12016 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "auto-complete-config.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [892 909])
            ("auto-complete" include nil nil [910 934])
            ("ac-imenu-index" variable nil nil [974 1001])
            ("ac-clear-variable-every-10-minutes" code nil nil [1003 1055])
            ("ac-imenu-candidates" function nil nil [1057 2380])
            ("ac-define-source" code nil nil [2382 2485])
            ("ac-gtags-candidate-face" variable
               (:default-value (quote ((t (:inherit ac-candidate-face :foreground "navy"))))
                :type "face")
                nil [2497 2640])
            ("ac-gtags-selection-face" variable
               (:default-value (quote ((t (:inherit ac-selection-face :background "navy"))))
                :type "face")
                nil [2642 2799])
            ("ac-gtags-candidate" function nil nil [2801 2934])
            ("ac-define-source" code nil nil [2936 3131])
            ("ac-yasnippet-candidate-face" variable
               (:default-value (quote ((t (:inherit ac-candidate-face :background "sandybrown" :foreground "black"))))
                :type "face")
                nil [3147 3342])
            ("ac-yasnippet-selection-face" variable
               (:default-value (quote ((t (:inherit ac-selection-face :background "coral3"))))
                :type "face")
                nil [3344 3511])
            ("ac-yasnippet-table-hash" function (:arguments ("table")) nil [3513 3693])
            ("ac-yasnippet-table-parent" function (:arguments ("table")) nil [3695 3885])
            ("ac-yasnippet-candidate-1" function (:arguments ("table")) nil [3887 4382])
            ("ac-yasnippet-candidates" function nil nil [4384 5287])
            ("ac-define-source" code nil nil [5289 5532])
            ("ac-semantic-candidates" function (:arguments ("prefix")) nil [5547 6056])
            ("ac-semantic-doc" function (:arguments ("symbol")) nil [6058 6337])
            ("ac-semantic-action" function nil nil [6339 7219])
            ("ac-define-source" code nil nil [7221 7535])
            ("ac-define-source" code nil nil [7537 7811])
            ("ac-eclim-candidates" function nil nil [7823 7950])
            ("ac-define-source" code nil nil [7952 8075])
            ("ac-css-property-alist" variable
               (:constant-flag t
                :default-value (quote (("azimuth" angle "left-side" "far-left" "left" "center-left" "center" "center-right" "right" "far-right" "right-side" "behind" "leftwards" "rightwards") ("background" background-color background-image background-repeat background-attachment background-position) ("background-attachment" "scroll" "fixed") ("background-color" color "transparent") ("background-image" uri "none") ("background-position" percentage length "left" "center" "right" percentage length "top" "center" "bottom" "left" "center" "right" "top" "center" "bottom") ("background-repeat" "repeat" "repeat-x" "repeat-y" "no-repeat") ("border" border-width border-style border-color) ("border-bottom" border) ("border-bottom-color" border-color) ("border-bottom-style" border-style) ("border-bottom-width" border-width) ("border-collapse" "collapse" "separate") ("border-color" color "transparent") ("border-left" border) ("border-left-color" border-color) ("border-left-style" border-style) ("border-left-width" border-width) ("border-right" border) ("border-right-color" border-color) ("border-right-style" border-style) ("border-right-width" border-width) ("border-spacing" length length) ("border-style" border-style) ("border-top" border) ("border-top-color" border-color) ("border-top-style" border-style) ("border-top-width" border-width) ("border-width" border-width) ("bottom" length percentage "auto") ("caption-side" "top" "bottom") ("clear" "none" "left" "right" "both") ("clip" shape "auto") ("color" color) ("content" "normal" "none" string uri counter "attr()" "open-quote" "close-quote" "no-open-quote" "no-close-quote") ("counter-increment" identifier integer "none") ("counter-reset" identifier integer "none") ("cue" cue-before cue-after) ("cue-after" uri "none") ("cue-before" uri "none") ("cursor" uri "*" "auto" "crosshair" "default" "pointer" "move" "e-resize" "ne-resize" "nw-resize" "n-resize" "se-resize" "sw-resize" "s-resize" "w-resize" "text" "wait" "help" "progress") ("direction" "ltr" "rtl") ("display" "inline" "block" "list-item" "run-in" "inline-block" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none") ("elevation" angle "below" "level" "above" "higher" "lower") ("empty-cells" "show" "hide") ("float" "left" "right" "none") ("font" font-style font-variant font-weight font-size "/" line-height font-family "caption" "icon" "menu" "message-box" "small-caption" "status-bar") ("font-family" family-name generic-family) ("font-size" absolute-size relative-size length percentage) ("font-style" "normal" "italic" "oblique") ("font-variant" "normal" "small-caps") ("font-weight" "normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900") ("height" length percentage "auto") ("left" length percentage "auto") ("letter-spacing" "normal" length) ("line-height" "normal" number length percentage) ("list-style" list-style-type list-style-position list-style-image) ("list-style-image" uri "none") ("list-style-position" "inside" "outside") ("list-style-type" "disc" "circle" "square" "decimal" "decimal-leading-zero" "lower-roman" "upper-roman" "lower-greek" "lower-latin" "upper-latin" "armenian" "georgian" "lower-alpha" "upper-alpha" "none") ("margin" margin-width) ("margin-bottom" margin-width) ("margin-left" margin-width) ("margin-right" margin-width) ("margin-top" margin-width) ("max-height" length percentage "none") ("max-width" length percentage "none") ("min-height" length percentage) ("min-width" length percentage) ("orphans" integer) ("outline" outline-color outline-style outline-width) ("outline-color" color "invert") ("outline-style" border-style) ("outline-width" border-width) ("overflow" "visible" "hidden" "scroll" "auto") ("padding" padding-width) ("padding-bottom" padding-width) ("padding-left" padding-width) ("padding-right" padding-width) ("padding-top" padding-width) ("page-break-after" "auto" "always" "avoid" "left" "right") ("page-break-before" "auto" "always" "avoid" "left" "right") ("page-break-inside" "avoid" "auto") ("pause" time percentage) ("pause-after" time percentage) ("pause-before" time percentage) ("pitch" frequency "x-low" "low" "medium" "high" "x-high") ("pitch-range" number) ("play-during" uri "mix" "repeat" "auto" "none") ("position" "static" "relative" "absolute" "fixed") ("quotes" string string "none") ("richness" number) ("right" length percentage "auto") ("speak" "normal" "none" "spell-out") ("speak-header" "once" "always") ("speak-numeral" "digits" "continuous") ("speak-punctuation" "code" "none") ("speech-rate" number "x-slow" "slow" "medium" "fast" "x-fast" "faster" "slower") ("stress" number) ("table-layout" "auto" "fixed") ("text-align" "left" "right" "center" "justify") ("text-decoration" "none" "underline" "overline" "line-through" "blink") ("text-indent" length percentage) ("text-transform" "capitalize" "uppercase" "lowercase" "none") ("top" length percentage "auto") ("unicode-bidi" "normal" "embed" "bidi-override") ("vertical-align" "baseline" "sub" "super" "top" "text-top" "middle" "bottom" "text-bottom" percentage length) ("visibility" "visible" "hidden" "collapse") ("voice-family" specific-voice generic-voice "*" specific-voice generic-voice) ("volume" number percentage "silent" "x-soft" "soft" "medium" "loud" "x-loud") ("white-space" "normal" "pre" "nowrap" "pre-wrap" "pre-line") ("widows" integer) ("width" length percentage "auto") ("word-spacing" "normal" length) ("z-index" "auto" integer))))
                nil [8115 14345])
            ("ac-css-value-classes" variable
               (:constant-flag t
                :default-value (quote ((absolute-size "xx-small" "x-small" "small" "medium" "large" "x-large" "xx-large") (border-style "none" "hidden" "dotted" "dashed" "solid" "double" "groove" "ridge" "inset" "outset") (color "aqua" "black" "blue" "fuchsia" "gray" "green" "lime" "maroon" "navy" "olive" "orange" "purple" "red" "silver" "teal" "white" "yellow" "rgb") (counter "counter") (family-name "Courier" "Helvetica" "Times") (generic-family "serif" "sans-serif" "cursive" "fantasy" "monospace") (generic-voice "male" "female" "child") (margin-width "auto") (relative-size "larger" "smaller") (shape "rect") (uri "url"))))
                nil [14347 15154])
            ("ac-css-pseudo-classes" variable
               (:constant-flag t
                :default-value (quote ("active" "after" "before" "first" "first-child" "first-letter" "first-line" "focus" "hover" "lang" "left" "link" "right" "visited")))
                nil [15156 15388])
            ("ac-css-property" variable nil nil [15390 15448])
            ("ac-css-prefix" function nil nil [15450 15641])
            ("ac-css-property-candidates" function nil nil [15643 16313])
            ("ac-define-source" code nil nil [16315 16441])
            ("ac-define-source" code nil nil [16452 16590])
            ("ac-define-source" code nil nil [16603 16729])
            ("ac-ropemacs-loaded" variable nil nil [16776 16807])
            ("ac-ropemacs-require" function nil nil [16808 17058])
            ("ac-ropemacs-setup" function nil nil [17060 17246])
            ("ac-ropemacs-initialize" function nil nil [17248 17529])
            ("ac-ropemacs-completions-cache" variable nil nil [17531 17573])
            ("ac-source-ropemacs" variable (:default-value (quote ((init lambda nil (setq ac-ropemacs-completions-cache (mapcar (lambda (completion) (concat ac-prefix completion)) (ignore-errors (rope-completions))))) (candidates . ac-ropemacs-completions-cache)))) nil [17574 17906])
            ("ac-source-rcodetools" variable (:default-value (quote ((init lambda nil (require (quote rcodetools)) (condition-case x (save-excursion (rct-exec-and-eval rct-complete-command-name "--completion-emacs-icicles")) (error) (setq rct-method-completion-table nil))) (candidates lambda nil (all-completions ac-prefix (mapcar (lambda (completion) (replace-regexp-in-string "	.*$" "" (car completion))) rct-method-completion-table)))))) nil [17923 18543])
            ("ac-common-setup" function nil nil [18571 18649])
            ("ac-emacs-lisp-mode-setup" function nil nil [18651 18826])
            ("ac-cc-mode-setup" function nil nil [18828 18934])
            ("ac-ruby-mode-setup" function nil nil [18936 18965])
            ("ac-css-mode-setup" function nil nil [18967 19061])
            ("ac-config-default" function nil nil [19078 19507])
            ("auto-complete-config" package nil nil [19509 19540]))          
      :file "auto-complete-config.el"
      :pointmax 19579
      :fsize 19578
      :lastmodtime '(21918 12016 0 0)
      :unmatched-syntax nil))
  :file "!home!marselo!.emacs.d!elpa!auto-complete-20150618.1949!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
